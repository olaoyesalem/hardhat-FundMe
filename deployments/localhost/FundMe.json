{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x062315daf321564429474d5f3b112ad72d272b191769f9cdc936054f1e345476",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "899764",
    "logsBloom": "0x
    "blockHash": "0xfaedeceee93213352f0504293d214c01bbbfdeb670c8a90bd594c438a0027815",
    "transactionHash": "0x062315daf321564429474d5f3b112ad72d272b191769f9cdc936054f1e345476",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "899764",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ae6bf907ca9ffadb5f35f9095e8e12c4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. Pragma\\npragma solidity ^0.8.0;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\nerror notOwner();\\nerror sendFailed();\\n\\n// if a variable is set one time to a particular value,  we use the keyword \\\"constant\\\", \\\" Immutable\\\";\\n// the variables constants no longer take up a storage spot rather they are inducted into the byte code of the smart contract\\n\\ncontract FundMe{\\n    using PriceConverter for uint256;\\n\\nuint256 public constant MINIMUM_USD = 50*1e18; \\nAggregatorV3Interface public priceFeed;\\n\\n\\nconstructor(address priceFeedAddress){  // constructor is a function that gets automatically called up once the contract is deployed.\\n  i_owner=msg.sender;   \\n  priceFeed = AggregatorV3Interface(priceFeedAddress);\\n}\\n\\naddress[] public funders; // to keep list of funders\\n\\nmapping(address=>uint256) public addressToAmountFunded; // to map funders to the amount deposited\\n\\n\\naddress public immutable i_owner;\\n\\n\\n\\nfunction fund() public payable onlyOwner {\\n\\nrequire(msg.value.getConversionRate( priceFeed)>=MINIMUM_USD,\\\"Didn't send enough\\\"); \\n funders.push(msg.sender);\\n\\n addressToAmountFunded [msg.sender]+=msg.value;// mapping the addrsses to the  amount they funded\\n}\\n\\nfunction Withdraw() public onlyOwner {\\n\\n    for(uint256 fundersIndex=0; fundersIndex<funders.length; fundersIndex++){\\naddress funder = funders[fundersIndex];\\naddressToAmountFunded[funder]=0; \\n }\\n\\nfunders = new address[](0);\\n//payable(msg.sender).transfer(address(this).balance);\\n\\n// send\\n// bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n// if(!sendSuccess){\\n//     revert sendFailed();\\n// }\\n// call\\n// this is a lower level command; it can be used to call functions wvwn without having thier ABI\\n\\n(bool callSuccess, )=payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\nrequire(callSuccess,\\\"call Failed\\\");\\n\\n\\n//   modifier onlyOwner{ \\n\\n// if(msg.sender !=i_owner){\\n//     revert notOwner();\\n// }\\n// _;\\n// }\\n// To still gets the details of the transaaction if  someone calls the contract without using the fund();\\n// recieve()\\n \\n}\\nmodifier onlyOwner{\\n         if(msg.sender !=i_owner){\\n    revert notOwner();\\n}\\n    _;\\n}\\nreceive() external payable{\\n    fund();\\n}\\n\\n// fallback\\nfallback() external payable{\\n    fund();\\n} \\n\\n}\\n\\n\\n\\n\\n\\n\\n\\n\",\"keccak256\":\"0x8485bdc6451f351fe601e6047a52f6d38319e23410c90fbd3a98937f240ffcf4\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\nfunction getPrice(AggregatorV3Interface priceFeed)internal view returns(uint256){\\n  \\n    //AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n    (,int256 price,,,)=priceFeed.latestRoundData();\\n     //This is the price of ETH in USD \\n    // $1,280.00000000 = 1eth // this has 8 decimal place\\n    return uint256(price*1e10);\\n}\\nfunction getVersion(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n    //AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n    return priceFeed.version();\\n}\\nfunction getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)internal view returns(uint256){// to get the amount of any ETH in USD\\nuint256 ethPrice= getPrice( priceFeed);\\n//3000_000000000000000000 = ETH/USD price\\n// 1_000000000000000000 (wei) ETH we are sending\\n uint256 ethPriceInUsd = (ethPrice * ethAmount)/1e18;\\n //3000 USD\\nreturn ethPriceInUsd;\\n}\\n\\n}\",\"keccak256\":\"0x2cdcd74411b953fdfec91fe2898c9179608277da8a6d4d292004f82ffc1a907b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200105638038062001056833981810160405281019061003491906100c6565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610141565b6000815190506100c08161012a565b92915050565b6000602082840312156100dc576100db610125565b5b60006100ea848285016100b1565b91505092915050565b60006100fe82610105565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610133816100f3565b811461013e57600080fd5b50565b60805160601c610ee86200016e600039600081816101ab0152818161038101526105f30152610ee86000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633e47d6f31461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af9190610840565b610367565b6040516100c19190610a36565b60405180910390f35b3480156100d657600080fd5b506100df61037f565b005b3480156100ed57600080fd5b506100f66105c0565b6040516101039190610a36565b60405180910390f35b34801561011857600080fd5b506101216105cd565b60405161012e91906109db565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105f1565b60405161016391906109c0565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061086d565b610615565b6040516101a091906109c0565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022e576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6802b5e3af16b188000061026b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065490919063ffffffff16565b10156102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906109f6565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461035e9190610a6d565b92505081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610404576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b05760006001828154811061042a57610429610d9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a890610cf7565b915050610407565b50600067ffffffffffffffff8111156104cc576104cb610dcd565b5b6040519080825280602002602001820160405280156104fa5781602001602082028036833780820191505090505b5060019080519060200190610510929190610730565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610537906109ab565b60006040518083038185875af1925050503d8060008114610574576040519150601f19603f3d011682016040523d82523d6000602084013e610579565b606091505b50509050806105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490610a16565b60405180910390fd5b50565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061062557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066083610690565b90506000670de0b6b3a764000085836106799190610c0b565b6106839190610ac3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106d957600080fd5b505afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610711919061089a565b5050509150506402540be400816107289190610af4565b915050919050565b8280548282559060005260206000209081019282156107a9579160200282015b828111156107a85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610750565b5b5090506107b691906107ba565b5090565b5b808211156107d35760008160009055506001016107bb565b5090565b6000813590506107e681610e56565b92915050565b6000815190506107fb81610e6d565b92915050565b60008135905061081081610e84565b92915050565b60008151905061082581610e84565b92915050565b60008151905061083a81610e9b565b92915050565b60006020828403121561085657610855610dfc565b5b6000610864848285016107d7565b91505092915050565b60006020828403121561088357610882610dfc565b5b600061089184828501610801565b91505092915050565b600080600080600060a086880312156108b6576108b5610dfc565b5b60006108c48882890161082b565b95505060206108d5888289016107ec565b94505060406108e688828901610816565b93505060606108f788828901610816565b92505060806109088882890161082b565b9150509295509295909350565b61091e81610c65565b82525050565b61092d81610cc1565b82525050565b6000610940601283610a5c565b915061094b82610e01565b602082019050919050565b6000610963600b83610a5c565b915061096e82610e2a565b602082019050919050565b6000610986600083610a51565b915061099182610e53565b600082019050919050565b6109a581610ca1565b82525050565b60006109b682610979565b9150819050919050565b60006020820190506109d56000830184610915565b92915050565b60006020820190506109f06000830184610924565b92915050565b60006020820190508181036000830152610a0f81610933565b9050919050565b60006020820190508181036000830152610a2f81610956565b9050919050565b6000602082019050610a4b600083018461099c565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a7882610ca1565b9150610a8383610ca1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ab857610ab7610d40565b5b828201905092915050565b6000610ace82610ca1565b9150610ad983610ca1565b925082610ae957610ae8610d6f565b5b828204905092915050565b6000610aff82610c77565b9150610b0a83610c77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b4957610b48610d40565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b8657610b85610d40565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610bc357610bc2610d40565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c0057610bff610d40565b5b828202905092915050565b6000610c1682610ca1565b9150610c2183610ca1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c5a57610c59610d40565b5b828202905092915050565b6000610c7082610c81565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ccc82610cd3565b9050919050565b6000610cde82610ce5565b9050919050565b6000610cf082610c81565b9050919050565b6000610d0282610ca1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d3557610d34610d40565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b610e5f81610c65565b8114610e6a57600080fd5b50565b610e7681610c77565b8114610e8157600080fd5b50565b610e8d81610ca1565b8114610e9857600080fd5b50565b610ea481610cab565b8114610eaf57600080fd5b5056fea2646970667358221220926d8c1865ed6546e8a4b152c5a382f1725584f84b197df05d9aca6b7d9849ac64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633e47d6f31461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af9190610840565b610367565b6040516100c19190610a36565b60405180910390f35b3480156100d657600080fd5b506100df61037f565b005b3480156100ed57600080fd5b506100f66105c0565b6040516101039190610a36565b60405180910390f35b34801561011857600080fd5b506101216105cd565b60405161012e91906109db565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105f1565b60405161016391906109c0565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061086d565b610615565b6040516101a091906109c0565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461022e576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6802b5e3af16b188000061026b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065490919063ffffffff16565b10156102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906109f6565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461035e9190610a6d565b92505081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610404576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b05760006001828154811061042a57610429610d9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a890610cf7565b915050610407565b50600067ffffffffffffffff8111156104cc576104cb610dcd565b5b6040519080825280602002602001820160405280156104fa5781602001602082028036833780820191505090505b5060019080519060200190610510929190610730565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610537906109ab565b60006040518083038185875af1925050503d8060008114610574576040519150601f19603f3d011682016040523d82523d6000602084013e610579565b606091505b50509050806105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490610a16565b60405180910390fd5b50565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061062557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066083610690565b90506000670de0b6b3a764000085836106799190610c0b565b6106839190610ac3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106d957600080fd5b505afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610711919061089a565b5050509150506402540be400816107289190610af4565b915050919050565b8280548282559060005260206000209081019282156107a9579160200282015b828111156107a85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610750565b5b5090506107b691906107ba565b5090565b5b808211156107d35760008160009055506001016107bb565b5090565b6000813590506107e681610e56565b92915050565b6000815190506107fb81610e6d565b92915050565b60008135905061081081610e84565b92915050565b60008151905061082581610e84565b92915050565b60008151905061083a81610e9b565b92915050565b60006020828403121561085657610855610dfc565b5b6000610864848285016107d7565b91505092915050565b60006020828403121561088357610882610dfc565b5b600061089184828501610801565b91505092915050565b600080600080600060a086880312156108b6576108b5610dfc565b5b60006108c48882890161082b565b95505060206108d5888289016107ec565b94505060406108e688828901610816565b93505060606108f788828901610816565b92505060806109088882890161082b565b9150509295509295909350565b61091e81610c65565b82525050565b61092d81610cc1565b82525050565b6000610940601283610a5c565b915061094b82610e01565b602082019050919050565b6000610963600b83610a5c565b915061096e82610e2a565b602082019050919050565b6000610986600083610a51565b915061099182610e53565b600082019050919050565b6109a581610ca1565b82525050565b60006109b682610979565b9150819050919050565b60006020820190506109d56000830184610915565b92915050565b60006020820190506109f06000830184610924565b92915050565b60006020820190508181036000830152610a0f81610933565b9050919050565b60006020820190508181036000830152610a2f81610956565b9050919050565b6000602082019050610a4b600083018461099c565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a7882610ca1565b9150610a8383610ca1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ab857610ab7610d40565b5b828201905092915050565b6000610ace82610ca1565b9150610ad983610ca1565b925082610ae957610ae8610d6f565b5b828204905092915050565b6000610aff82610c77565b9150610b0a83610c77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b4957610b48610d40565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b8657610b85610d40565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610bc357610bc2610d40565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c0057610bff610d40565b5b828202905092915050565b6000610c1682610ca1565b9150610c2183610ca1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c5a57610c59610d40565b5b828202905092915050565b6000610c7082610c81565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ccc82610cd3565b9050919050565b6000610cde82610ce5565b9050919050565b6000610cf082610c81565b9050919050565b6000610d0282610ca1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d3557610d34610d40565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b610e5f81610c65565b8114610e6a57600080fd5b50565b610e7681610c77565b8114610e8157600080fd5b50565b610e8d81610ca1565b8114610e9857600080fd5b50565b610ea481610cab565b8114610eaf57600080fd5b5056fea2646970667358221220926d8c1865ed6546e8a4b152c5a382f1725584f84b197df05d9aca6b7d9849ac64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 84,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 88,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}