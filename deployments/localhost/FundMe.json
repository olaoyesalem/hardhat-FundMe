{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd497e32d60ffb7e10edefef9634046db659e01ed8a0df489fa6588429f3a5187",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1010884",
    "logsBloom": "0x
    "blockHash": "0x1c5642dbafa6c3c1bdab7dca8105e442ba9005ee0bc300f594b079daab6d3944",
    "transactionHash": "0xd497e32d60ffb7e10edefef9634046db659e01ed8a0df489fa6588429f3a5187",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1010884",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "fef6737e4f6a9537cc4f36d4d998f46d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Olaoye Salem\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. Pragma\\npragma solidity ^0.8.0;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_notOwner();\\nerror FundMe_sendFailed();\\n\\n// if a variable is set one time to a particular value,  we use the keyword \\\"constant\\\", \\\" Immutable\\\";\\n// the variables constants no longer take up a storage spot rather they are inducted into the byte code of the smart contract\\n/**\\n @title A contract for crowd funding\\n @author Olaoye Salem\\n @notice This contract is to demo a sample funding contract\\n @dev This implements price feeds as our library\\n */\\ncontract FundMe{\\n    using PriceConverter for uint256;\\n\\nuint256 public constant MINIMUM_USD = 50*1e18; \\nAggregatorV3Interface private s_priceFeed;\\naddress[] private s_funders; // to keep list of s_funders\\nmapping(address=>uint256) private s_addressToAmountFunded; // to map s_funders to the amount deposited\\naddress private immutable i_owner;\\n\\nconstructor(address s_priceFeedAddress){ \\n  i_owner=msg.sender;   \\n  s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n}\\n\\nmodifier onlyOwner{\\n         if(msg.sender !=i_owner){\\n    revert FundMe_notOwner();\\n}\\n    _;\\n}\\n\\n\\n\\nfunction fund()  public payable  {\\n\\nrequire(msg.value.getConversionRate( s_priceFeed)>=MINIMUM_USD,\\\"Didn't send enough\\\");  \\ns_addressToAmountFunded [msg.sender]+=msg.value;// mapping the addrsses to the  amount they funded\\ns_funders.push(msg.sender);\\n}\\n\\nfunction Withdraw() public onlyOwner {\\n\\n    for(uint256 s_fundersIndex=0; s_fundersIndex<s_funders.length; s_fundersIndex++){\\naddress funder = s_funders[s_fundersIndex];\\ns_addressToAmountFunded[funder]=0; \\n }\\n\\ns_funders = new address[](0);\\n\\n(bool callSuccess, )=payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\nrequire(callSuccess,\\\"call Failed\\\");\\n\\n}\\n\\nfunction cheaperWithdraw() public onlyOwner{\\n    address[] memory funders= s_funders; // Saving an array to memory saves gas\\n\\nfor(uint256 fundersIndex=0; fundersIndex<funders.length; fundersIndex++){\\naddress funder = funders[fundersIndex];\\ns_addressToAmountFunded[funder]=0; \\n }\\n\\ns_funders = new address[](0);\\n\\n(bool callSuccess, )=payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\nrequire(callSuccess,\\\"call Failed\\\");\\n}\\n\\nreceive() external payable{\\n    fund();\\n}\\n\\n// fallback\\nfallback() external payable{\\n    fund();\\n} \\n\\n    function getOwner() public view returns(address) {\\n    return i_owner;\\n}\\nfunction getFunders(uint256 _index) public view returns(address){\\n        return s_funders[_index];\\n}\\n\\nfunction getAddressToAmountFunded(address _funder) public view returns(uint256){\\n    return s_addressToAmountFunded[_funder];\\n}\\n\\n// function Price() public view returns(uint256){  -- Later, get current price of et6hereum\\n//     return s_priceFeed.getPrice();\\n// }\\n\\nfunction deployer() public view returns(address){\\n    return msg.sender;\\n}\\n\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\",\"keccak256\":\"0xa66c4379e258e906ea9a3a4d83f28f261ca3091cba2d109fa7a8a29d1dbf05ee\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\nfunction getPrice(AggregatorV3Interface priceFeed)internal view returns(uint256){\\n  \\n    //AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n    (,int256 price,,,)=priceFeed.latestRoundData();\\n     //This is the price of ETH in USD \\n    // $1,280.00000000 = 1eth // this has 8 decimal place\\n    return uint256(price*1e10);\\n}\\nfunction getVersion(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n    //AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n    return priceFeed.version();\\n}\\nfunction getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)internal view returns(uint256){// to get the amount of any ETH in USD\\nuint256 ethPrice= getPrice( priceFeed);\\n//3000_000000000000000000 = ETH/USD price\\n// 1_000000000000000000 (wei) ETH we are sending\\n uint256 ethPriceInUsd = (ethPrice * ethAmount)/1e18;\\n //3000 USD\\nreturn ethPriceInUsd;\\n}\\n\\n}\",\"keccak256\":\"0x2cdcd74411b953fdfec91fe2898c9179608277da8a6d4d292004f82ffc1a907b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200126a3803806200126a8339818101604052810190620000379190620000cc565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000151565b600081519050620000c68162000137565b92915050565b600060208284031215620000e557620000e462000132565b5b6000620000f584828501620000b5565b91505092915050565b60006200010b8262000112565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014281620000fe565b81146200014e57600080fd5b50565b60805160601c6110ec6200017e60003960008181610397015281816105e7015261060d01526110ec6000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e814610154578063b60d42881461017f578063be2693f014610189578063d5f39488146101a05761008e565b80630343fb25146100985780633a7b6c74146100d557806357ea89b6146101125780636b69a592146101295761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa4565b610304565b6040516100cc9190610c70565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610ad1565b61034d565b6040516101099190610c15565b60405180910390f35b34801561011e57600080fd5b50610127610395565b005b34801561013557600080fd5b5061013e6105d6565b60405161014b9190610c70565b60405180910390f35b34801561016057600080fd5b506101696105e3565b6040516101769190610c15565b60405180910390f35b6101876101cb565b005b34801561019557600080fd5b5061019e61060b565b005b3480156101ac57600080fd5b506101b56108b0565b6040516101c29190610c15565b60405180910390f35b6802b5e3af16b188000061020860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b890919063ffffffff16565b1015610249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024090610c30565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102989190610ca7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061036357610362610fa2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041a576040517fd72551ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104c6576000600182815481106104405761043f610fa2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104be90610efb565b91505061041d565b50600067ffffffffffffffff8111156104e2576104e1610fd1565b5b6040519080825280602002602001820160405280156105105781602001602082028036833780820191505090505b5060019080519060200190610526929190610994565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054d90610c00565b60006040518083038185875af1925050503d806000811461058a576040519150601f19603f3d011682016040523d82523d6000602084013e61058f565b606091505b50509050806105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca90610c50565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610690576040517fd72551ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561071457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ca575b5050505050905060005b815181101561079f57600082828151811061073c5761073b610fa2565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079790610efb565b91505061071e565b50600067ffffffffffffffff8111156107bb576107ba610fd1565b5b6040519080825280602002602001820160405280156107e95781602001602082028036833780820191505090505b50600190805190602001906107ff929190610994565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161082690610c00565b60006040518083038185875af1925050503d8060008114610863576040519150601f19603f3d011682016040523d82523d6000602084013e610868565b606091505b50509050806108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390610c50565b60405180910390fd5b5050565b600033905090565b6000806108c4836108f4565b90506000670de0b6b3a764000085836108dd9190610e45565b6108e79190610cfd565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093d57600080fd5b505afa158015610951573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109759190610afe565b5050509150506402540be4008161098c9190610d2e565b915050919050565b828054828255906000526020600020908101928215610a0d579160200282015b82811115610a0c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b4565b5b509050610a1a9190610a1e565b5090565b5b80821115610a37576000816000905550600101610a1f565b5090565b600081359050610a4a8161105a565b92915050565b600081519050610a5f81611071565b92915050565b600081359050610a7481611088565b92915050565b600081519050610a8981611088565b92915050565b600081519050610a9e8161109f565b92915050565b600060208284031215610aba57610ab9611000565b5b6000610ac884828501610a3b565b91505092915050565b600060208284031215610ae757610ae6611000565b5b6000610af584828501610a65565b91505092915050565b600080600080600060a08688031215610b1a57610b19611000565b5b6000610b2888828901610a8f565b9550506020610b3988828901610a50565b9450506040610b4a88828901610a7a565b9350506060610b5b88828901610a7a565b9250506080610b6c88828901610a8f565b9150509295509295909350565b610b8281610e9f565b82525050565b6000610b95601283610c96565b9150610ba082611005565b602082019050919050565b6000610bb8600b83610c96565b9150610bc38261102e565b602082019050919050565b6000610bdb600083610c8b565b9150610be682611057565b600082019050919050565b610bfa81610edb565b82525050565b6000610c0b82610bce565b9150819050919050565b6000602082019050610c2a6000830184610b79565b92915050565b60006020820190508181036000830152610c4981610b88565b9050919050565b60006020820190508181036000830152610c6981610bab565b9050919050565b6000602082019050610c856000830184610bf1565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cb282610edb565b9150610cbd83610edb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cf257610cf1610f44565b5b828201905092915050565b6000610d0882610edb565b9150610d1383610edb565b925082610d2357610d22610f73565b5b828204905092915050565b6000610d3982610eb1565b9150610d4483610eb1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8357610d82610f44565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc057610dbf610f44565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dfd57610dfc610f44565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3a57610e39610f44565b5b828202905092915050565b6000610e5082610edb565b9150610e5b83610edb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9457610e93610f44565b5b828202905092915050565b6000610eaa82610ebb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f0682610edb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3957610f38610f44565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b61106381610e9f565b811461106e57600080fd5b50565b61107a81610eb1565b811461108557600080fd5b50565b61109181610edb565b811461109c57600080fd5b50565b6110a881610ee5565b81146110b357600080fd5b5056fea26469706673582212203e5533d7d917b9d1cf2b00b255abcb6e0febbcb12ebd1eebbacd48780943de2e64736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e814610154578063b60d42881461017f578063be2693f014610189578063d5f39488146101a05761008e565b80630343fb25146100985780633a7b6c74146100d557806357ea89b6146101125780636b69a592146101295761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa4565b610304565b6040516100cc9190610c70565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610ad1565b61034d565b6040516101099190610c15565b60405180910390f35b34801561011e57600080fd5b50610127610395565b005b34801561013557600080fd5b5061013e6105d6565b60405161014b9190610c70565b60405180910390f35b34801561016057600080fd5b506101696105e3565b6040516101769190610c15565b60405180910390f35b6101876101cb565b005b34801561019557600080fd5b5061019e61060b565b005b3480156101ac57600080fd5b506101b56108b0565b6040516101c29190610c15565b60405180910390f35b6802b5e3af16b188000061020860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b890919063ffffffff16565b1015610249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024090610c30565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102989190610ca7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061036357610362610fa2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041a576040517fd72551ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104c6576000600182815481106104405761043f610fa2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104be90610efb565b91505061041d565b50600067ffffffffffffffff8111156104e2576104e1610fd1565b5b6040519080825280602002602001820160405280156105105781602001602082028036833780820191505090505b5060019080519060200190610526929190610994565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054d90610c00565b60006040518083038185875af1925050503d806000811461058a576040519150601f19603f3d011682016040523d82523d6000602084013e61058f565b606091505b50509050806105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca90610c50565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610690576040517fd72551ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561071457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ca575b5050505050905060005b815181101561079f57600082828151811061073c5761073b610fa2565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079790610efb565b91505061071e565b50600067ffffffffffffffff8111156107bb576107ba610fd1565b5b6040519080825280602002602001820160405280156107e95781602001602082028036833780820191505090505b50600190805190602001906107ff929190610994565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161082690610c00565b60006040518083038185875af1925050503d8060008114610863576040519150601f19603f3d011682016040523d82523d6000602084013e610868565b606091505b50509050806108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390610c50565b60405180910390fd5b5050565b600033905090565b6000806108c4836108f4565b90506000670de0b6b3a764000085836108dd9190610e45565b6108e79190610cfd565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093d57600080fd5b505afa158015610951573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109759190610afe565b5050509150506402540be4008161098c9190610d2e565b915050919050565b828054828255906000526020600020908101928215610a0d579160200282015b82811115610a0c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b4565b5b509050610a1a9190610a1e565b5090565b5b80821115610a37576000816000905550600101610a1f565b5090565b600081359050610a4a8161105a565b92915050565b600081519050610a5f81611071565b92915050565b600081359050610a7481611088565b92915050565b600081519050610a8981611088565b92915050565b600081519050610a9e8161109f565b92915050565b600060208284031215610aba57610ab9611000565b5b6000610ac884828501610a3b565b91505092915050565b600060208284031215610ae757610ae6611000565b5b6000610af584828501610a65565b91505092915050565b600080600080600060a08688031215610b1a57610b19611000565b5b6000610b2888828901610a8f565b9550506020610b3988828901610a50565b9450506040610b4a88828901610a7a565b9350506060610b5b88828901610a7a565b9250506080610b6c88828901610a8f565b9150509295509295909350565b610b8281610e9f565b82525050565b6000610b95601283610c96565b9150610ba082611005565b602082019050919050565b6000610bb8600b83610c96565b9150610bc38261102e565b602082019050919050565b6000610bdb600083610c8b565b9150610be682611057565b600082019050919050565b610bfa81610edb565b82525050565b6000610c0b82610bce565b9150819050919050565b6000602082019050610c2a6000830184610b79565b92915050565b60006020820190508181036000830152610c4981610b88565b9050919050565b60006020820190508181036000830152610c6981610bab565b9050919050565b6000602082019050610c856000830184610bf1565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cb282610edb565b9150610cbd83610edb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cf257610cf1610f44565b5b828201905092915050565b6000610d0882610edb565b9150610d1383610edb565b925082610d2357610d22610f73565b5b828204905092915050565b6000610d3982610eb1565b9150610d4483610eb1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8357610d82610f44565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc057610dbf610f44565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dfd57610dfc610f44565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e3a57610e39610f44565b5b828202905092915050565b6000610e5082610edb565b9150610e5b83610edb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9457610e93610f44565b5b828202905092915050565b6000610eaa82610ebb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f0682610edb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3957610f38610f44565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b61106381610e9f565b811461106e57600080fd5b50565b61107a81610eb1565b811461108557600080fd5b50565b61109181610edb565b811461109c57600080fd5b50565b6110a881610ee5565b81146110b357600080fd5b5056fea26469706673582212203e5533d7d917b9d1cf2b00b255abcb6e0febbcb12ebd1eebbacd48780943de2e64736f6c63430008070033",
  "devdoc": {
    "author": "Olaoye Salem",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}